#ifndef EXPLOIT_FEEDBACK_H
#define EXPLOIT_FEEDBACK_H

#include <stdint.h>

struct exploit_feedback {
    double injection_time_ms;
    double kicking_time_ms;
    double total_exploit_time_ms;

    int descriptors_processed;
    int memory_corruption_detected;
    int device_errors_detected;
    int kernel_warnings_generated;

    uint64_t pre_memory_usage;
    uint64_t post_memory_usage;
    int memory_fragmentation_change;

    int unexpected_interrupts;
    int device_resets;
    int queue_stalls;

    int effectiveness_score; /* 0-100 */
};

void initialize_feedback_collection(void);
void start_exploit_timing(void);
void record_injection_complete(void);
void record_kicking_complete(void);
void analyze_memory_corruption(void);
void analyze_device_behavior(void);
void calculate_effectiveness_score(void);
void print_exploit_feedback(void);
void save_feedback_log(const char *filename);

#endif /* EXPLOIT_FEEDBACK_H */

